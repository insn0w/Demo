name: ci
on:
  push:
    branches:
      - 'main'
jobs:
  pre-build:
    env:
      JOB_ENVIRONMENT_VARIABLE: 'custom job environment variable for ubuntu'
    runs-on: ubuntu-latest
    steps:
    - run: echo  "The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo  "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo  "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    - run: echo "${{ secrets.PASSWORD }}"
    - name: Print custom environment variables from ubuntu-latest
      env:
        STEP_ENVIRONMENT_VARIABLE: 'custom step environment variable for bash'
      run: |
        echo "Accessing environment variables in run command"
        echo "$WORKSPACE_ENVIRONMENT_VARIABLE"
        echo "$JOB_ENVIRONMENT_VARIABLE"
        echo "$STEP_ENVIRONMENT_VARIABLE"
        
  database-integration:
    needs: pre-build
    runs-on: ubuntu-latest
    container: node:10.18-jessie
    services:
      postgres:
        image: postgres
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Connect to PostgreSQL
        run: python --version #validate_db.py
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432  


  unit-test:
    needs: database-integration
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
     # uses: fakeaction/checktitle@v3
    - name: Check PR title
      run: |
          title="${{ github.event.pull_request.title }}"
          if [[ $title =~ ^octocat ]]; then
          echo "PR title starts with 'octocat'"
          exit 1
          else
          echo "PR title did not start with 'octocat'"
          exit 0
          fi      

  SCA:
    needs: database-integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        continue-on-error: true
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          #args: --file=Demo/Dockerfile
          args: --docker insn0w/simplewhale  --file=./Dockerfile --project-name=insn0w/Demo

  SAST:
    needs: [ unit-test ]
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_1 }}
  build:
    needs: [ SAST ]
    runs-on: ubuntu-latest
    steps:
  
      -
        name: Checkout 
        uses: actions/checkout@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:latest
        
        
